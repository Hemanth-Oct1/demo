name: Reusable Workflow To Deploy MuleSoft Application
 
on:
  workflow_call:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout this repo
      uses: actions/checkout@v3
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: | 
          ${{ runner.os }}-maven-
 
     # Step 2: Set up Java 17
    - name: Set up Java 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'zulu'

    #   # Step 3: Set up Maven
    # - name: Set up Maven
    #   uses: actions/setup-java@v3
    #   with:
    #     maven-version: '3.8.7'

    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Stamp artifact file name with commit hash
      run: |
        artifactName1=$(ls target/*.jar | head -1)
        commitHash=$(git rev-parse --short "$GITHUB_SHA")
        artifactName2=$(ls target/*.jar | head -1 | sed "s/.jar/-$commitHash.jar/g")
        mv $artifactName1 $artifactName2
    - name: Upload artifact 
      uses: actions/upload-artifact@v3
      with:
          name: artifacts
          path: target/*.jar
          
  deploydev:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v3

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - uses: actions/download-artifact@v3
        with:
          name: artifacts

      - name: Authenticate with Anypoint Platform
        id: authenticate
        run: |
          echo "Authenticating with Anypoint Platform..."
          response=$(curl -X POST https://anypoint.mulesoft.com/accounts/api/v2/oauth2/token \
          -H "Content-Type: application/json" \
          -d '{
            "grant_type": "password",
            "username": "'"${{ secrets.ANYPOINT_USERNAME }}"'",
            "password": "'"${{ secrets.ANYPOINT_PASSWORD }}"'"
          }')
          echo "$response" > auth.json
          TOKEN=$(jq -r '.access_token' auth.json)
          echo "::set-output name=access_token::$TOKEN"

      - name: Deploy to dev
        env:
          USERNAME: ${{ secrets.connected_app_client_id }}
          PASSWORD: ${{ secrets.connected_app_client_secret}}
          PLATFORM_CLIENT_ID: ${{secrets.org_client_id}}
          PLATFORM_CLIENT_SECRET: ${{secrets.org_client_secret}}
          PRIVATE_SPACE_ID: ${{ secrets.PRIVATE_SPACE_ID }}
          
        run: |
          artifactName=$(ls *.jar | head -1)
          mvn deploy -DmuleDeploy \
           -Dmule.artifact=$artifactName \
           -Danypoint.username="$USERNAME" \
           -Danypoint.password="$PASSWORD" \
           -Denv=Dev \
           -Dappname=demo-app-dev \
           -Danypoint.platform.client_id="$PLATFORM_CLIENT_ID" \
           -Danypoint.platform.client_secret="$PLATFORM_CLIENT_SECRET" \
           -Danypoint.platform.private_space_id="$PRIVATE_SPACE_ID" 
          
